package maze.bfs;

import java.awt.*;
import java.util.*;
import java.util.List;
import javax.swing.*;

public class Maze {

	int[][] map_array = {
			{0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0},
            {0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0},
            {0,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,0,0,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0},
            {0,1,1,1,1,1,1,1,0,0,0,0,0,1,0,1,0,0,1,0,1,0,1,1,1,1,1,0,0,0,0,1,0},
            {0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0},
            {0,1,1,0,1,1,1,1,1,1,1,0,0,1,0,1,1,0,1,1,1,0,1,0,0,1,1,1,1,1,1,1,0},
            {0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,1,0},
            {0,1,0,0,1,1,1,1,0,1,1,1,1,1,0,0,1,0,1,1,1,1,1,0,0,1,0,1,1,1,0,1,0},
            {0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0},
            {0,1,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0},
            {0,1,1,1,1,0,1,1,0,1,0,1,0,0,0,0,1,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,0},
            {0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0},
            {0,1,1,0,0,1,1,1,1,1,0,1,1,0,1,0,0,0,1,0,1,0,1,1,1,1,0,1,0,1,0,1,0},
            {0,0,1,0,0,1,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1,0,1,0,0,1,1,1,1,1,0,1,0},
            {0,0,1,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0},
            {0,1,1,0,0,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,0,1,0,1,0},
       	    {0,1,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,1,1,1,0},
            {0,1,0,0,0,1,0,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,0,0,1,0,0,0,0,0},
            {0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,0},
            {0,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,1,0,1,0,1,0,1,0},
            {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0},
            {0,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,0,1,0,1,0,1,0},
            {0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0},
            {0,1,1,1,0,1,0,1,0,0,0,0,0,1,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0},
            {0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0},
            {0,1,0,1,1,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0},
            {0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,1,1,1,1,0,1,0,1,0,0,0,1,1,1,1,0,1,0},
            {0,1,0,1,0,1,0,1,0,0,0,1,0,1,1,1,0,0,1,0,1,0,1,1,1,0,1,0,0,1,0,1,0},
            {0,1,0,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,0,0},
            {0,1,0,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0}
    
	
     	};
	
	
	public List<Integer> get_final_pos() {
		List<Integer> final_pos = new ArrayList<Integer>();
		
		for (int j=0; j < map_array.length; j++) {
			for (int i=0; i<map_array[0].length; i++) {
				if (map_array[j][i] == 4) {
					final_pos.add(Integer.valueOf(j));
					final_pos.add(Integer.valueOf(i));
					
					return final_pos;
				}
				
			}
		}
		return null;
		
		
		
	}
		
}
